// screens/LibraryScreen.js
import React from "react";
import { View, Text, TouchableOpacity, StyleSheet, FlatList, Alert } from "react-native";
import { SafeAreaView } from 'react-native-safe-area-context';
import Icon from 'react-native-vector-icons/Ionicons';
import { useNavigation } from '@react-navigation/native';
import { useAudio } from '../context/AudioProvider'; // üí° Import useAudio

export default function LibraryScreen() {
  const navigation = useNavigation();
  // üí° L·∫•y danh s√°ch playlists v√† h√†m t·∫°o playlist
  const { playlists, createPlaylist } = useAudio();

  // üí° H√†m x·ª≠ l√Ω t·∫°o playlist m·ªõi
  const handleCreatePlaylist = () => {
    Alert.prompt(
      "Playlist M·ªõi",
      "Nh·∫≠p t√™n cho playlist c·ªßa b·∫°n:",
      [
        { text: "H·ªßy", style: "cancel" },
        {
          text: "T·∫°o",
          onPress: (playlistName) => {
            if (playlistName) {
              createPlaylist(playlistName);
            }
          },
        },
      ],
      "plain-text" // Ki·ªÉu nh·∫≠p li·ªáu
    );
  };

  // üí° H√†m render m·ªói m·ª•c playlist
  const renderPlaylistItem = ({ item }) => (
    <TouchableOpacity 
      style={styles.menuItem}
      // üí° ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn m√†n h√¨nh chi ti·∫øt
      onPress={() => navigation.navigate('PlaylistDetail', { playlistId: item.id })}
    >
      <Icon name="musical-notes-outline" size={26} color="#333" style={styles.icon} />
      <Text style={styles.menuText}>{item.name}</Text>
      <Text style={styles.songCount}>{item.songs.length} b√†i</Text>
    </TouchableOpacity>
  );

  return (
    <SafeAreaView style={styles.container}>
      <Text style={styles.headerTitle}>Th∆∞ vi·ªán</Text>
      
      {/* N√∫t B√†i h√°t Y√™u th√≠ch (Gi·ªØ nguy√™n) */}
      <TouchableOpacity 
        style={styles.menuItem}
        onPress={() => navigation.navigate('FavoriteSongs')}
      >
        <Icon name="heart-outline" size={26} color="#333" style={styles.icon} />
        <Text style={styles.menuText}>B√†i h√°t Y√™u th√≠ch</Text>
      </TouchableOpacity>
      
      {/* üí° N√∫t t·∫°o Playlist m·ªõi (FR-3.2) */}
      <TouchableOpacity 
        style={styles.menuItem}
        onPress={handleCreatePlaylist}
      >
        <Icon name="add-outline" size={26} color="#333" style={styles.icon} />
        <Text style={styles.menuText}>T·∫°o playlist m·ªõi</Text>
      </TouchableOpacity>

      {/* üí° Danh s√°ch c√°c playlist ƒë√£ t·∫°o (FR-3.4) */}
      <FlatList
        data={playlists}
        keyExtractor={(item) => item.id}
        renderItem={renderPlaylistItem}
        ListHeaderComponent={<Text style={styles.listHeader}>PLAYLISTS</Text>}
        ListEmptyComponent={<Text style={styles.empty}>B·∫°n ch∆∞a t·∫°o playlist n√†o</Text>}
      />

    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: '#fff' },
  headerTitle: {
    fontSize: 22,
    fontWeight: 'bold',
    padding: 15,
  },
  menuItem: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 15,
    paddingVertical: 12,
  },
  icon: { marginRight: 15 },
  menuText: {
    fontSize: 18,
    color: '#333',
    flex: 1, // ƒê·ªÉ ƒë·∫©y s·ªë l∆∞·ª£ng b√†i h√°t ra
  },
  songCount: {
    fontSize: 14,
    color: 'gray',
  },
  listHeader: {
    fontSize: 14,
    fontWeight: 'bold',
    color: 'gray',
    paddingHorizontal: 15,
    paddingTop: 20,
    paddingBottom: 10,
  },
  empty: {
    textAlign: 'center',
    color: 'gray',
    marginTop: 10,
  },
});